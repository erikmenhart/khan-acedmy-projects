angleMode = "radians";
//creates flower func
var Flower = function(){
    this.position = new PVector(width/2, height-100);
    this.mass = 25;
};
//draws flower
Flower.prototype.display = function(){
    stroke(33, 84, 5);
strokeWeight(9);
line(width/2, height, width/2, height/2);
stroke(255, 225, 0);
fill(245, 255, 54);
ellipse(width/2,height/2,15,15);
fill(252, 0, 0);
strokeWeight(1);
ellipse(219,200,30,20);
ellipse(181,200,30,20);
ellipse(200,218,20,30);
ellipse(200,183,20,30);
};
//particle system for rain
var Particle = function(position){
    this.acceleration = new PVector(0, 0.05);
    this.velocity = new PVector(random(-1, 1), random(-1, 0));
    this.position = position.get();
    this.timeToLive = 225;
};
//calls funcs
Particle.prototype.run = function() {
    this.update();
    this.display();
};
//moves rain
Particle.prototype.update = function(){
    this.velocity.add(this.acceleration);
    this.position.add(this.velocity);
    this.timeToLive -= 2;
};
//draws raindrops
Particle.prototype.display = function() {
    noStroke();
    fill(156, 237, 255, this.timeToLive);
    ellipse(this.position.x, this.position.y, 12, 12);
};
//kills particles
Particle.prototype.isDead = function() {
    if (this.timeToLive < 0) {
        return true;
    } else {
        return false;
    }
};
//calls rains
var Water = function(position){
    Particle.call(this, position);
};

Water.prototype = Object.create(Particle.prototype);
Water.constructor = Water;

Water.prototype.display = function(){
    noStroke();
    fill(156, 237, 255, this.timeToLive);
    ellipse(this.position.x, this.position.y, 12, 12);
};

var ParticleSystem = function(position) {
    this.origin = position.get();
    this.particles = [];
};

ParticleSystem.prototype.addParticle = function() {
    //always adding water praticles
    this.particles.push(new Water(this.origin));
};
//runs particle system
ParticleSystem.prototype.run = function() {
    for (var i = this.particles.length-1; i >= 0; i--) {
            for (var i = this.particles.length-1; i >= 0; i--)    {
            var p = this.particles[i];
            p.run();
            //removing dead particles
            if (p.isDead()) {
                this.particles.splice(i, 1);
            }
        }
  }
        
};

var particleSystem  = [];
var w = 25;
for (var i = 0; i < 4; i++){
        particleSystem.push(new ParticleSystem (new PVector(w, 0)));
        w = w+100;
    }
//moves ladybug
var Bug = function() {
    this.a = 0;
    this.angVelocity = 0;
    this.angle = new PVector();
    this.velocity = new PVector(random(-0.05, 0.05), random(-0.05, 0.05));
    this.amplitude = new PVector(random(20, width/2), random(20, width/2));
    this.position = new PVector(0, 0);
};
//oscillating ladybug
Bug.prototype.oscillate = function() {
    this.angle.add(this.velocity);
    this.position.set(
                sin(this.angle.x) * this.amplitude.x,
                sin(this.angle.y) * this.amplitude.y);
    var distance = this.position.mag();
    this.angVelocity += distance / 1000000;
    this.angVelocity = constrain(this.angVelocity, 0, 0.1);
    this.a += this.angVelocity;
};
//draws ladybug
Bug.prototype.display = function() {
    pushMatrix();
    translate(width/2, height/2);
    stroke(20, 1, 1);
    strokeWeight(4);
    imageMode(CENTER);
    translate(this.position.x, this.position.y);
    rotate(this.a);
    fill(255, 0, 0);
    ellipse(5,3,50,40);
    fill(0, 0, 0);
    ellipse(-1,-6,10,10);
    ellipse(18,3,10,10);
    ellipse(-1,11,10,10);
    ellipse(-22,3,17,24);
    strokeWeight(2);
    line(-30,-5,-40,-9);
    line(-30,9,-40,12);
    ellipse(-43,12.5,3,3);
    ellipse(-43,-10,3,3);
    popMatrix();
};

var flower = new Flower();

var bug = [];
for (var i = 0; i < 2; i++) {
    bug[i] = new Bug(random(0.1, 2), random(width), random(height));
}
//drawing function
draw = function() {
        background(185, 190, 191);
    
    for (var i = 0; i < particleSystem.length; i++){
        particleSystem[i].addParticle();
        particleSystem[i].run();
        
    }
    
    
    fill(48, 46, 46);
    noStroke();
    ellipse(60, 18, 158, 114);
    ellipse(181, 18, 158, 114);
    ellipse(260, 24, 158, 88);
    ellipse(351, 18, 158, 126);
    
    for (var grassPos = 0; grassPos <= 400; grassPos += 100){
        image(getImage("cute/GrassBlock"), grassPos, 376, 113, 119);
    }
    
    for (var i = 0; i < bug.length; i++){
        bug[i].display();
        bug[i].oscillate();
    }
    flower.display();
};
